name: Deploy Receipt-App to EC2

on:
  push:
    branches:
      - main  # 배포할 브랜치
    paths:
      - 'receipt-app/**'  # 변경된 파일이 receipt-app 관련일 때만 배포
  workflow_dispatch:  # 수동으로 워크플로우 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest  # Ubuntu 환경에서 실행

    steps:
      # 1. Repository Checkout
      - name: Checkout repository
        uses: actions/checkout@v3  # 리포지토리 체크아웃

      # 2. SSH 키 설정
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa  # GitHub Secrets에 등록된 개인 키 사용
          chmod 600 ~/.ssh/id_rsa  # 개인 키의 권한을 600으로 설정

      # 3. EC2 서버의 공개 키 등록 (known_hosts 파일에 추가)
      - name: Add known host
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts  # EC2 서버의 공개 키를 확인하여 known_hosts에 추가

      # 4. EC2에 접속하여 애플리케이션 배포
      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # 오류 발생 시 즉시 종료
      
            echo "Navigating to application directory..."
            cd AIML_project/receipt-app || exit 1
      
            echo "Pulling latest changes from GitHub..."
            git pull origin main
      
            echo "Building the application..."
            ./gradlew build -x test
      
            echo "Stopping existing application process..."
            PIDS=\$(pgrep -f 'receipt-app-0.0.1-SNAPSHOT.jar')
            if [ -n "\$PIDS" ]; then
              echo "Existing process found: \$PIDS"
              kill -9 \$PIDS
              echo "Process \$PIDS killed."
            else
              echo "No existing process found."
            fi
            sleep 3
      
            echo "Starting new application instance..."
            nohup java -jar build/libs/receipt-app-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev >> ~/receipt-app.log 2>&1 &
            sleep 2
      
            echo "Deployment completed!"
            ps aux | grep 'receipt-app-0.0.1-SNAPSHOT.jar'
            tail -n 20 ~/receipt-app.log
          EOF
