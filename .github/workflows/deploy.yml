name: CI/CD with Docker

on:
  push:
    branches:
      - main
    paths:
      - 'receipt-app/**'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Gradle Build without Daemon
        run: |
          cd receipt-app
          chmod +x ./gradlew
          ./gradlew clean bootJar --no-daemon

      - name: Docker Build & Push
        run: |
          cd receipt-app
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker build -t receipt-app:latest .
          docker tag receipt-app:latest ${{ secrets.DOCKER_USERNAME }}/receipt-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/receipt-app:latest

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # 디렉토리 생성
            mkdir -p /home/ec2-user/receipt-app

            # .env 파일 생성
            cat <<EOF > /home/ec2-user/receipt-app/.env
            SPRING_JWT_SECRET_KEY=${{ secrets.SPRING_JWT_SECRET_KEY }}
            MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}
            MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}
            DB_USERNAME_LOCAL=${{ secrets.DB_USERNAME_LOCAL }}
            DB_PASSWORD_LOCAL=${{ secrets.DB_PASSWORD_LOCAL }}
            SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}
            RECEIPT_IMAGE_PATH=${{ secrets.RECEIPT_IMAGE_PATH }}
            CLOVA_OCR_CLIENT_ID=${{ secrets.CLOVA_OCR_CLIENT_ID }}
            CLOVA_OCR_CLIENT_SECRET=${{ secrets.CLOVA_OCR_CLIENT_SECRET }}
            CLOVA_OCR_URL=${{ secrets.CLOVA_OCR_URL }}
            EOF

            # 디렉토리 이동 및 최신 이미지 pull
            cd /home/ec2-user/receipt-app
            docker pull ${{ secrets.DOCKER_USERNAME }}/receipt-app:latest

            # 기존 컨테이너 중지 및 제거
            docker stop receipt-app || true
            docker rm receipt-app || true

            # 새 컨테이너 실행
            docker run -d \
              --name receipt-app \
              -p 8080:8080 \
              --restart always \
              --env-file .env \
              ${{ secrets.DOCKER_USERNAME }}/receipt-app:latest

            # 불필요한 이미지 정리
            docker image prune -f
